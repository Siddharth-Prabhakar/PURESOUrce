import React, { useState, useEffect } from "react";
import { GroundwaterSample } from "@/entities/GroundwaterSample";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ArrowLeft, MapPin, Filter, Layers } from "lucide-react";
import { useNavigate } from "react-router-dom";
import { createPageUrl } from "@/utils";
import GoogleMap from '@/components/maps/GoogleMap';

export default function RiskMapPage() {
  const navigate = useNavigate();
  const [samples, setSamples] = useState([]);
  const [selectedRisk, setSelectedRisk] = useState("all");
  const [isLoading, setIsLoading] = useState(true);
  const [selectedSample, setSelectedSample] = useState(null);

  useEffect(() => {
    loadSamples();
  }, []);

  const loadSamples = async () => {
    try {
      const data = await GroundwaterSample.list("-created_date");
      const validSamples = data.filter(s => s.latitude && s.longitude);
      setSamples(validSamples);
    } catch (error) {
      console.error("Error loading samples:", error);
    }
    setIsLoading(false);
  };

  const filteredSamples = selectedRisk === "all" 
    ? samples 
    : samples.filter(s => s.risk_classification === selectedRisk);

  const handleMarkerClick = (sample) => {
    setSelectedSample(sample);
  };

  const riskStats = {
    safe: samples.filter(s => s.risk_classification === 'safe').length,
    moderate: samples.filter(s => s.risk_classification === 'moderate_risk').length,
    high: samples.filter(s => s.risk_classification === 'high_risk').length
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 to-blue-50">
      <div className="p-6 lg:p-8 max-w-full mx-auto">
        <div className="flex flex-col lg:flex-row justify-between items-start lg:items-center mb-8 gap-4">
          <div className="flex items-center gap-4">
            <Button
              variant="outline"
              size="icon"
              onClick={() => navigate(createPageUrl("Dashboard"))}
              className="border-slate-300"
            >
              <ArrowLeft className="w-4 h-4" />
            </Button>
            <div>
              <h1 className="text-3xl font-bold text-slate-900">Groundwater Risk Map</h1>
              <p className="text-slate-600 mt-1">Geographical distribution of contamination risk</p>
            </div>
          </div>
          
          <div className="flex gap-2 flex-wrap">
            <Button
              variant={selectedRisk === "all" ? "default" : "outline"}
              size="sm"
              onClick={() => setSelectedRisk("all")}
              className="border-slate-300"
            >
              All ({samples.length})
            </Button>
            <Button
              variant={selectedRisk === "safe" ? "default" : "outline"}
              size="sm"
              onClick={() => setSelectedRisk("safe")}
              className="border-green-300 text-green-700 hover:bg-green-50"
            >
              Safe ({riskStats.safe})
            </Button>
            <Button
              variant={selectedRisk === "moderate_risk" ? "default" : "outline"}
              size="sm"
              onClick={() => setSelectedRisk("moderate_risk")}
              className="border-amber-300 text-amber-700 hover:bg-amber-50"
            >
              Moderate ({riskStats.moderate})
            </Button>
            <Button
              variant={selectedRisk === "high_risk" ? "default" : "outline"}
              size="sm"
              onClick={() => setSelectedRisk("high_risk")}
              className="border-red-300 text-red-700 hover:bg-red-50"
            >
              High Risk ({riskStats.high})
            </Button>
          </div>
        </div>

        <div className="grid lg:grid-cols-4 gap-6">
          <Card className="lg:col-span-3 bg-white/80 backdrop-blur-sm shadow-lg border-slate-200 h-[75vh]">
            <CardHeader className="pb-2">
              <CardTitle className="text-lg">Interactive Risk Map</CardTitle>
              <p className="text-sm text-slate-600">
                Powered by Google Maps ‚Ä¢ Click markers for detailed information
              </p>
            </CardHeader>
            <CardContent className="p-0 h-full">
              <div className="h-full rounded-lg overflow-hidden">
                <GoogleMap
                  samples={filteredSamples}
                  selectedRisk={selectedRisk}
                  onMarkerClick={handleMarkerClick}
                />
              </div>
            </CardContent>
          </Card>

          <div className="space-y-6">
             <Card className="bg-white/80 backdrop-blur-sm shadow-lg border-slate-200">
              <CardHeader>
                <CardTitle className="text-lg flex items-center gap-2">
                  <Layers className="w-5 h-5 text-blue-600" />
                  Map Legend
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div className="flex items-center gap-3">
                  <div className="w-5 h-5 bg-green-500 rounded-full border-2 border-white shadow-md"></div>
                  <div>
                    <p className="font-medium text-slate-900">Safe</p>
                    <p className="text-xs text-slate-600">HMPI ‚â§ 100</p>
                  </div>
                </div>
                <div className="flex items-center gap-3">
                  <div className="w-5 h-5 bg-amber-500 rounded-full border-2 border-white shadow-md"></div>
                  <div>
                    <p className="font-medium text-slate-900">Moderate Risk</p>
                    <p className="text-xs text-slate-600">HMPI 100-200</p>
                  </div>
                </div>
                <div className="flex items-center gap-3">
                  <div className="w-5 h-5 bg-red-500 rounded-full border-2 border-white shadow-md"></div>
                  <div>
                    <p className="font-medium text-slate-900">High Risk</p>
                    <p className="text-xs text-slate-600">HMPI &gt; 200</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            {selectedSample ? (
              <Card className="bg-white/80 backdrop-blur-sm shadow-lg border-slate-200">
                <CardHeader>
                  <CardTitle className="text-lg flex items-center gap-2">
                    <MapPin className="w-5 h-5 text-blue-600" />
                    Selected Site Details
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div>
                    <h4 className="font-bold text-slate-900 mb-2">{selectedSample.location_name}</h4>
                    <div className="space-y-2 text-sm">
                      <div className="flex justify-between">
                        <span className="text-slate-600">HMPI Score:</span>
                        <span className="font-bold">{selectedSample.hmpi_score?.toFixed(1)}</span>
                      </div>
                      <div className="flex justify-between items-center">
                        <span className="text-slate-600">Risk Level:</span>
                        <Badge className={`${
                          selectedSample.risk_classification === 'safe' ? 'bg-green-100 text-green-800' :
                          selectedSample.risk_classification === 'moderate_risk' ? 'bg-amber-100 text-amber-800' :
                          'bg-red-100 text-red-800'
                        } border`}>
                          {selectedSample.risk_classification === 'safe' ? 'Safe' :
                           selectedSample.risk_classification === 'moderate_risk' ? 'Moderate' :
                           'High Risk'}
                        </Badge>
                      </div>
                      <div className="pt-2 border-t">
                        <p className="text-slate-600 mb-1">Key Metals (mg/L):</p>
                        <div className="grid grid-cols-2 gap-1 text-xs">
                          {selectedSample.pb_mg_l && <div>Pb: {selectedSample.pb_mg_l.toFixed(3)}</div>}
                          {selectedSample.as_mg_l && <div>As: {selectedSample.as_mg_l.toFixed(3)}</div>}
                          {selectedSample.cd_mg_l && <div>Cd: {selectedSample.cd_mg_l.toFixed(3)}</div>}
                          {selectedSample.cr_mg_l && <div>Cr: {selectedSample.cr_mg_l.toFixed(3)}</div>}
                        </div>
                      </div>
                      <div className="text-xs text-slate-500 pt-2 border-t">
                        üìç {selectedSample.latitude?.toFixed(4)}, {selectedSample.longitude?.toFixed(4)}
                      </div>
                    </div>
                  </div>
                </CardContent>
              </Card>
            ) : (
              <Card className="bg-white/80 backdrop-blur-sm shadow-lg border-slate-200">
                <CardContent className="text-center py-8">
                  <MapPin className="w-12 h-12 mx-auto mb-4 text-slate-400" />
                  <p className="text-slate-600 font-medium">Enhanced with Google Maps!</p>
                  <p className="text-sm text-slate-500 mt-2">
                    Click on any marker to view detailed site information and analysis.
                  </p>
                </CardContent>
              </Card>
            )}

          </div>
        </div>
      </div>
    </div>
  );
}